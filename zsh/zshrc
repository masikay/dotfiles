# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.config/zsh/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
#if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
#fi

# Set the directory where to store zinit and plugins
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Download Zinit, if it's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
    mkdir -p "$(dirname $ZINIT_HOME)"
    git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

# Source/load zinit
source "$ZINIT_HOME/zinit.zsh"

# Add in Powerlevel10k
# zinit ice depth=1; zinit light romkatv/powerlevel10k

# If not installed yet, install Starship
STARSHIP=$(which starship)
if [[ $STARSHIP =~ "not found" ]]; then
  curl -sS https://starship.rs/install.sh | sh
fi


# Add in zsh plugins
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light Aloxaf/fzf-tab

# Add in snippets
zinit snippet OMZP::git
zinit snippet OMZP::sudo
zinit snippet OMZP::archlinux
zinit snippet OMZP::command-not-found

# Load cmmpletions
autoload -Uz compinit && compinit

zinit cdreplay -q

# To customize prompt, run `p10k configure` or edit ~/.config/zsh/.p10k.zsh.
#[[ ! -f ~/.config/zsh/.p10k.zsh ]] || source ~/.config/zsh/.p10k.zsh

# Keybindings
bindkey -e
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward
bindkey '^[w' kill-region

# History
HISTSIZE=5000
HISTFILE="${ZDOTDIR}/.zsh_history"
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Who needs cd?
setopt autocd

# Completion styling
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete::__zoxide_z:*' fzf-preview 'ls --color $realpath'

# Aliases
[[ ! -f $ZDOTDIR/.aliasrc ]] || source $ZDOTDIR/.aliasrc

# Shell integrations
# fzf

FZF_TARGET_VERSION="0.48.0"

# Get installed fzf version (if installed)
FZF_INSTALLED_VERSION=$(fzf --version 2>/dev/null | awk '{print $1}')

if [[ -z "$FZF_INSTALLED_VERSION" ]]; then
  echo "fzf is not installed."
else
  # Compare versions using sort -V
  if [[ "$(printf '%s\n' "$FZF_TARGET_VERSION" "$FZF_INSTALLED_VERSION" | sort -V | head -n1)" = "$FZF_TARGET_VERSION" ]]; then
    source <(fzf --zsh)
  else
   source /usr/share/doc/fzf/examples/key-bindings.zsh
   source /usr/share/doc/fzf/examples/completion.zsh
  fi
fi


# zoxide
eval "$(zoxide init zsh)"

# Flash specs
CATNAP=$(which catnap)
if ! [[ $CATNAP =~ "not found" ]]; then
  catnap
else
  neofetch
fi

# Starship prompt
eval "$(starship init zsh)"
